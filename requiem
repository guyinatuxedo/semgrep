#!/bin/env python3

import os
import json
import argparse

class Result():
    def __init__(self, result):
        self.check_id = result["check_id"]
        self.end = result["end"]
        self.path = result["path"]
        extra = result["extra"]
        self.message = extra["message"]
        self.severity = extra["severity"]


class ResultsParser():
    def __init__(self):
        self.results = []

    def add_result(self, result):
        new_result = Result(result)
        self.results.append(new_result)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-r', metavar='rules', type=str, help="The rules for Requiem to use.")
    parser.add_argument('-c', metavar='code', type=str, help="The rules for Requiem to use.")

    args = parser.parse_args()

    rules = args.r
    code = args.c

    cmd = "semgrep --config=%s %s --json > output" % (rules, code)

    print("\n\n\n\n" + cmd)

    os.remove("output")
    os.system(cmd)

    output_file = open("output")
    json_data = output_file.read()
    data = json.loads(json_data)

    results = data["results"]

    results_parser = ResultsParser()

    for result in results:
        results_parser.add_result(result)

    #print(data["results"])
